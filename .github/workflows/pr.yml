name: Pull Request

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  static_analysis_python:
    name: "Static Analysis Python"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: python -m pip install .[dev]
      - name: "Check: format"
        run: python -m black --check .
      - name: "Check: lint"
        run: python -m ruff check .
      - name: "Check: static types"
        run: python -m mypy .
  static_analysis_typescript:
    name: "Static Analysis Typescript"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  
      - uses: actions/setup-node@v4
        with:
          node-version: 22.10.0
      - name: Install dependencies
        run: yarn
      - name: Lint
        run: yarn lint
  tflint:
    name: "Terraform Static Analysis"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: terraform-linters/setup-tflint@v2
      - name: tflint
        run: tflint --chdir infrastructure/
  unit_test:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    needs: [static_analysis_python]
    steps:
      - uses: actions/checkout@v4  
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: python -m pip install .[dev]
      - name: Unit Tests
        run: python -m pytest tests/unit
  integration_test:
    name: "Integration Tests"
    runs-on: ubuntu-latest
    needs: [static_analysis_python]
    services:
      # Label used to access the service container
      postgres:
        image: postgres # From docker hub
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4  
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: python -m pip install .[dev]
      - name: Integration Tests
        run: python -m pytest tests/unit
        env:
          POSTGRES_HOST: postgres
  all_tests_pass:
    runs-on: ubuntu-latest
    needs: [integration_test, unit_test, static_analysis_typescript, tflint]
    steps:
      - run: echo "tests passed!"
  build_and_push_app:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [all_tests_pass]
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"
      - uses: google-github-actions/setup-gcloud@v1
      - run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
      - name: Build production container
        run: docker build .
  build_and_push_ui:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [all_tests_pass]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.10.0
      - name: Install dependencies
        run: yarn
      - run: yarn build